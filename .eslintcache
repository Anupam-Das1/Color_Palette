[{"D:\\react_tutorial\\color_project\\src\\index.js":"1","D:\\react_tutorial\\color_project\\src\\App.js":"2","D:\\react_tutorial\\color_project\\src\\reportWebVitals.js":"3","D:\\react_tutorial\\color_project\\src\\Palette.js":"4","D:\\react_tutorial\\color_project\\src\\seedColor.js":"5","D:\\react_tutorial\\color_project\\src\\ColorBox.js":"6","D:\\react_tutorial\\color_project\\src\\colorHelper.js":"7","D:\\react_tutorial\\color_project\\src\\Navbar.js":"8","D:\\react_tutorial\\color_project\\src\\PaletteList.js":"9","D:\\react_tutorial\\color_project\\src\\MiniPalette.js":"10","D:\\react_tutorial\\color_project\\src\\SingleColorPalette.js":"11","D:\\react_tutorial\\color_project\\src\\PaletteFooter.js":"12","D:\\react_tutorial\\color_project\\src\\styles\\PaletteFooterStyles.js":"13","D:\\react_tutorial\\color_project\\src\\styles\\NewPaletteFormStyles.js":"14","D:\\react_tutorial\\color_project\\src\\constants.js":"15","D:\\react_tutorial\\color_project\\src\\ColorPickerForm.js":"16","D:\\react_tutorial\\color_project\\src\\styles\\ColorPickerFormStyles.js":"17","D:\\react_tutorial\\color_project\\src\\DragableColorBox.js":"18","D:\\react_tutorial\\color_project\\src\\DragableColorList.js":"19","D:\\react_tutorial\\color_project\\src\\DraggableColorList.js":"20","D:\\react_tutorial\\color_project\\src\\styles\\sizes.js":"21","D:\\react_tutorial\\color_project\\src\\NewPaletteForm.js":"22","D:\\react_tutorial\\color_project\\src\\PaletteFormNav.js":"23","D:\\react_tutorial\\color_project\\src\\PaletteMetaForm.js":"24"},{"size":542,"mtime":1611653074056,"results":"25","hashOfConfig":"26"},{"size":2389,"mtime":1615384409284,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":1804,"mtime":1612183936381,"results":"29","hashOfConfig":"26"},{"size":10526,"mtime":1611481151177,"results":"30","hashOfConfig":"26"},{"size":2133,"mtime":1612188223125,"results":"31","hashOfConfig":"26"},{"size":1207,"mtime":1611568360351,"results":"32","hashOfConfig":"26"},{"size":1915,"mtime":1612183753751,"results":"33","hashOfConfig":"26"},{"size":2560,"mtime":1615443629618,"results":"34","hashOfConfig":"26"},{"size":2957,"mtime":1615443800104,"results":"35","hashOfConfig":"26"},{"size":2074,"mtime":1612186536978,"results":"36","hashOfConfig":"26"},{"size":424,"mtime":1612184850399,"results":"37","hashOfConfig":"26"},{"size":297,"mtime":1612184827310,"results":"38","hashOfConfig":"26"},{"size":1288,"mtime":1612244958232,"results":"39","hashOfConfig":"26"},{"size":32,"mtime":1612359925819,"results":"40","hashOfConfig":"26"},{"size":2473,"mtime":1615218998289,"results":"41","hashOfConfig":"26"},{"size":328,"mtime":1612360399883,"results":"42","hashOfConfig":"26"},{"size":1285,"mtime":1614926511703,"results":"43","hashOfConfig":"26"},{"size":536,"mtime":1614588369474,"results":"44","hashOfConfig":"26"},{"size":630,"mtime":1615454333227,"results":"45","hashOfConfig":"26"},{"size":269,"mtime":1614781208112,"results":"46","hashOfConfig":"26"},{"size":9067,"mtime":1615358678143,"results":"47","hashOfConfig":"26"},{"size":4351,"mtime":1615358807882,"results":"48","hashOfConfig":"26"},{"size":3148,"mtime":1615357699568,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1q90e0g",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"89"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"52"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"52"},"D:\\react_tutorial\\color_project\\src\\index.js",[],["113","114"],"D:\\react_tutorial\\color_project\\src\\App.js",[],"D:\\react_tutorial\\color_project\\src\\reportWebVitals.js",[],"D:\\react_tutorial\\color_project\\src\\Palette.js",["115"],"import React, { Component } from 'react'\r\nimport ColorBox from './ColorBox'\r\nimport Navbar from './Navbar'\r\nimport './Palette.css'\r\n\r\nclass Palette extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state= { level: 500 , format: \"hex\"}\r\n        this.changeLevel=this.changeLevel.bind(this)\r\n        this.changeFormat=this.changeFormat.bind(this)\r\n    }\r\n    changeLevel(level){\r\n        this.setState({ level })\r\n    }\r\n    changeFormat(val){\r\n         this.setState({ format: val })\r\n    }\r\n    render(){\r\n        const {colors,id} = this.props.palette\r\n        const {level,format } = this.state\r\n        const colorBoxes=this.props.palette.colors[this.state.level].map(color => (\r\n            <ColorBox \r\n                background={color[format]} \r\n                name={color.name}\r\n                key={color.id}\r\n                id={color.id}\r\n                paletteId={id}\r\n                showLink={true}\r\n                \r\n            />\r\n        )) \r\n        return( \r\n            <div className='Palette'>\r\n                <Navbar \r\n                    level={level} \r\n                    changeLevel={this.changeLevel}\r\n                    handleChange={this.changeFormat}\r\n                    showingAllColors={true}\r\n                />\r\n                {/* Navbar goes here */}\r\n                <div className='Palette-colors'>\r\n                    {/* bunch of color boxes */}\r\n                    {colorBoxes}\r\n                </div>\r\n                {/* footer eventually */}\r\n                <footer className=\"Palette-footer\">\r\n                    {this.props.palette.paletteName}\r\n                    <span className=\"emoji\">{this.props.palette.emoji}</span>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Palette;","D:\\react_tutorial\\color_project\\src\\seedColor.js",["116"],"export default [\r\n    {\r\n      paletteName: \"Material UI Colors\",\r\n      id: \"material-ui-colors\",\r\n      emoji: \"ðŸŽ¨\",\r\n      colors: [\r\n        { name: \"red\", color: \"#F44336\" },\r\n        { name: \"pink\", color: \"#E91E63\" },\r\n        { name: \"purple\", color: \"#9C27B0\" },\r\n        { name: \"deeppurple\", color: \"#673AB7\" },\r\n        { name: \"indigo\", color: \"#3F51B5\" },\r\n        { name: \"blue\", color: \"#2196F3\" },\r\n        { name: \"lightblue\", color: \"#03A9F4\" },\r\n        { name: \"cyan\", color: \"#00BCD4\" },\r\n        { name: \"teal\", color: \"#009688\" },\r\n        { name: \"green\", color: \"#4CAF50\" },\r\n        { name: \"lightgreen\", color: \"#8BC34A\" },\r\n        { name: \"lime\", color: \"#CDDC39\" },\r\n        { name: \"yellow\", color: \"#FFEB3B\" },\r\n        { name: \"amber\", color: \"#FFC107\" },\r\n        { name: \"orange\", color: \"#FF9800\" },\r\n        { name: \"deeporange\", color: \"#FF5722\" },\r\n        { name: \"brown\", color: \"#795548\" },\r\n        { name: \"grey\", color: \"#9E9E9E\" },\r\n        { name: \"bluegrey\", color: \"#607D8B\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors v1\",\r\n      id: \"flat-ui-colors-v1\",\r\n      emoji: \"ðŸ¤™\",\r\n      colors: [\r\n        { name: \"Turquoise\", color: \"#1abc9c\" },\r\n        { name: \"Emerald\", color: \"#2ecc71\" },\r\n        { name: \"PeterRiver\", color: \"#3498db\" },\r\n        { name: \"Amethyst\", color: \"#9b59b6\" },\r\n        { name: \"WetAsphalt\", color: \"#34495e\" },\r\n        { name: \"GreenSea\", color: \"#16a085\" },\r\n        { name: \"Nephritis\", color: \"#27ae60\" },\r\n        { name: \"BelizeHole\", color: \"#2980b9\" },\r\n        { name: \"Wisteria\", color: \"#8e44ad\" },\r\n        { name: \"MidnightBlue\", color: \"#2c3e50\" },\r\n        { name: \"SunFlower\", color: \"#f1c40f\" },\r\n        { name: \"Carrot\", color: \"#e67e22\" },\r\n        { name: \"Alizarin\", color: \"#e74c3c\" },\r\n        { name: \"Clouds\", color: \"#ecf0f1\" },\r\n        { name: \"Concrete\", color: \"#95a5a6\" },\r\n        { name: \"Orange\", color: \"#f39c12\" },\r\n        { name: \"Pumpkin\", color: \"#d35400\" },\r\n        { name: \"Pomegranate\", color: \"#c0392b\" },\r\n        { name: \"Silver\", color: \"#bdc3c7\" },\r\n        { name: \"Asbestos\", color: \"#7f8c8d\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Dutch\",\r\n      id: \"flat-ui-colors-dutch\",\r\n      emoji: \"ðŸ‡³ðŸ‡±\",\r\n      colors: [\r\n        { name: \"Sunflower\", color: \"#FFC312\" },\r\n        { name: \"Energos\", color: \"#C4E538\" },\r\n        { name: \"BlueMartina\", color: \"#12CBC4\" },\r\n        { name: \"LavenderRose\", color: \"#FDA7DF\" },\r\n        { name: \"BaraRose\", color: \"#ED4C67\" },\r\n        { name: \"RadiantYellow\", color: \"#F79F1F\" },\r\n        { name: \"AndroidGreen\", color: \"#A3CB38\" },\r\n        { name: \"MediterraneanSea\", color: \"#1289A7\" },\r\n        { name: \"LavenderTea\", color: \"#D980FA\" },\r\n        { name: \"VerryBerry\", color: \"#B53471\" },\r\n        { name: \"PuffinsBill\", color: \"#EE5A24\" },\r\n        { name: \"PixelatedGrass\", color: \"#009432\" },\r\n        { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\r\n        { name: \"ForgottenPurple\", color: \"#9980FA\" },\r\n        { name: \"HollyHock\", color: \"#833471\" },\r\n        { name: \"RedPigment\", color: \"#EA2027\" },\r\n        { name: \"TurkishAqua\", color: \"#006266\" },\r\n        { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\r\n        { name: \"CircumorbitalRing\", color: \"#5758BB\" },\r\n        { name: \"MagentaPurple\", color: \"#6F1E51\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors American\",\r\n      id: \"flat-ui-colors-american\",\r\n      emoji: \"ðŸ‡ºðŸ‡¸\",\r\n      colors: [\r\n        { name: \"LightGreenishBlue\", color: \"#55efc4\" },\r\n        { name: \"FadedPoster\", color: \"#81ecec\" },\r\n        { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\r\n        { name: \"ShyMoment\", color: \"#a29bfe\" },\r\n        { name: \"CityLights\", color: \"#dfe6e9\" },\r\n        { name: \"MintLeaf\", color: \"#00b894\" },\r\n        { name: \"RobinsEggBlue\", color: \"#00cec9\" },\r\n        { name: \"ElectronBlue\", color: \"#0984e3\" },\r\n        { name: \"ExodusFruit\", color: \"#6c5ce7\" },\r\n        { name: \"SoothingBreeze\", color: \"#b2bec3\" },\r\n        { name: \"SourLemon\", color: \"#ffeaa7\" },\r\n        { name: \"FirstDate\", color: \"#fab1a0\" },\r\n        { name: \"PinkGlamour\", color: \"#ff7675\" },\r\n        { name: \"Pico8Pink\", color: \"#fd79a8\" },\r\n        { name: \"AmericanRiver\", color: \"#636e72\" },\r\n        { name: \"BrightYarrow\", color: \"#fdcb6e\" },\r\n        { name: \"OrangeVille\", color: \"#e17055\" },\r\n        { name: \"Chi-Gong\", color: \"#d63031\" },\r\n        { name: \"PrunusAvium\", color: \"#e84393\" },\r\n        { name: \"DraculaOrchid\", color: \"#2d3436\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Aussie\",\r\n      id: \"flat-ui-colors-aussie\",\r\n      emoji: \"ðŸ‡¦ðŸ‡º\",\r\n      colors: [\r\n        { name: \"Beekeeper\", color: \"#f6e58d\" },\r\n        { name: \"SpicedNectarine\", color: \"#ffbe76\" },\r\n        { name: \"PinkGlamour\", color: \"#ff7979\" },\r\n        { name: \"JuneBud\", color: \"#badc58\" },\r\n        { name: \"CoastalBreeze\", color: \"#dff9fb\" },\r\n        { name: \"Turbo\", color: \"#f9ca24\" },\r\n        { name: \"QuinceJelly\", color: \"#f0932b\" },\r\n        { name: \"CarminePink\", color: \"#eb4d4b\" },\r\n        { name: \"PureApple\", color: \"#6ab04c\" },\r\n        { name: \"HintOfIcePack\", color: \"#c7ecee\" },\r\n        { name: \"MiddleBlue\", color: \"#7ed6df\" },\r\n        { name: \"Heliotrope\", color: \"#e056fd\" },\r\n        { name: \"ExodusFruit\", color: \"#686de0\" },\r\n        { name: \"DeepKoamaru\", color: \"#30336b\" },\r\n        { name: \"SoaringEagle\", color: \"#95afc0\" },\r\n        { name: \"GreenlandGreen\", color: \"#22a6b3\" },\r\n        { name: \"SteelPink\", color: \"#be2edd\" },\r\n        { name: \"Blurple\", color: \"#4834d4\" },\r\n        { name: \"DeepCove\", color: \"#130f40\" },\r\n        { name: \"WizardGrey\", color: \"#535c68\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors British\",\r\n      id: \"flat-ui-colors-british\",\r\n      emoji: \"ðŸ‡¬ðŸ‡§\",\r\n      colors: [\r\n        { name: \"ProtossPylon\", color: \"#00a8ff\" },\r\n        { name: \"Periwinkle\", color: \"#9c88ff\" },\r\n        { name: \"Rise-N-Shine\", color: \"#fbc531\" },\r\n        { name: \"DownloadProgress\", color: \"#4cd137\" },\r\n        { name: \"Seabrook\", color: \"#487eb0\" },\r\n        { name: \"VanaDylBlue\", color: \"#0097e6\" },\r\n        { name: \"MattPurple\", color: \"#8c7ae6\" },\r\n        { name: \"NanohanachaGold\", color: \"#e1b12c\" },\r\n        { name: \"SkirretGreen\", color: \"#44bd32\" },\r\n        { name: \"Naval\", color: \"#40739e\" },\r\n        { name: \"NasturcianFlower\", color: \"#e84118\" },\r\n        { name: \"LynxWhite\", color: \"#f5f6fa\" },\r\n        { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\r\n        { name: \"MazarineBlue\", color: \"#273c75\" },\r\n        { name: \"BlueNights\", color: \"#353b48\" },\r\n        { name: \"HarleyOrange\", color: \"#c23616\" },\r\n        { name: \"HintOfPensive\", color: \"#dcdde1\" },\r\n        { name: \"ChainGangGrey\", color: \"#718093\" },\r\n        { name: \"PicoVoid\", color: \"#192a56\" },\r\n        { name: \"ElectroMagnetic\", color: \"#2f3640\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Spanish\",\r\n      id: \"flat-ui-colors-spanish\",\r\n      emoji: \"ðŸ‡ªðŸ‡¸\",\r\n      colors: [\r\n        { name: \"JacksonsPurple\", color: \"#40407a\" },\r\n        { name: \"C64Purple\", color: \"#706fd3\" },\r\n        { name: \"SwanWhite\", color: \"#f7f1e3\" },\r\n        { name: \"SummerSky\", color: \"#34ace0\" },\r\n        { name: \"CelestialGreen\", color: \"#33d9b2\" },\r\n        { name: \"LuckyPoint\", color: \"#2c2c54\" },\r\n        { name: \"Liberty\", color: \"#474787\" },\r\n        { name: \"HotStone\", color: \"#aaa69d\" },\r\n        { name: \"DevilBlue\", color: \"#227093\" },\r\n        { name: \"PalmSpringsSplash\", color: \"#218c74\" },\r\n        { name: \"FlourescentRed\", color: \"#ff5252\" },\r\n        { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\r\n        { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\r\n        { name: \"MandarinSorbet\", color: \"#ffb142\" },\r\n        { name: \"SpicedButterNut\", color: \"#ffda79\" },\r\n        { name: \"EyeOfNewt\", color: \"#b33939\" },\r\n        { name: \"ChileanFire\", color: \"#cd6133\" },\r\n        { name: \"GreyPorcelain\", color: \"#84817a\" },\r\n        { name: \"AlamedaOchre\", color: \"#cc8e35\" },\r\n        { name: \"Desert\", color: \"#ccae62\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Indian\",\r\n      id: \"flat-ui-colors-indian\",\r\n      emoji: \"ðŸ‡®ðŸ‡³\",\r\n      colors: [\r\n        { name: \"OrchidOrange\", color: \"#FEA47F\" },\r\n        { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\r\n        { name: \"HoneyGlow\", color: \"#EAB543\" },\r\n        { name: \"SweetGarden\", color: \"#55E6C1\" },\r\n        { name: \"FallingStar\", color: \"#CAD3C8\" },\r\n        { name: \"RichGardenia\", color: \"#F97F51\" },\r\n        { name: \"ClearChill\", color: \"#1B9CFC\" },\r\n        { name: \"WhitePepper\", color: \"#F8EFBA\" },\r\n        { name: \"Keppel\", color: \"#58B19F\" },\r\n        { name: \"ShipsOfficer\", color: \"#2C3A47\" },\r\n        { name: \"FieryFuchsia\", color: \"#B33771\" },\r\n        { name: \"BlueBell\", color: \"#3B3B98\" },\r\n        { name: \"GeorgiaPeach\", color: \"#FD7272\" },\r\n        { name: \"OasisStream\", color: \"#9AECDB\" },\r\n        { name: \"BrightUbe\", color: \"#D6A2E8\" },\r\n        { name: \"MagentaPurple\", color: \"#6D214F\" },\r\n        { name: \"EndingNavyBlue\", color: \"#182C61\" },\r\n        { name: \"SasquatchSocks\", color: \"#FC427B\" },\r\n        { name: \"PineGlade\", color: \"#BDC581\" },\r\n        { name: \"HighlighterLavender\", color: \"#82589F\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors French\",\r\n      id: \"flat-ui-colors-french\",\r\n      emoji: \"ðŸ‡«ðŸ‡·\",\r\n      colors: [\r\n        { name: \"FlatFlesh\", color: \"#fad390\" },\r\n        { name: \"MelonMelody\", color: \"#f8c291\" },\r\n        { name: \"Livid\", color: \"#6a89cc\" },\r\n        { name: \"Spray\", color: \"#82ccdd\" },\r\n        { name: \"ParadiseGreen\", color: \"#b8e994\" },\r\n        { name: \"SquashBlossom\", color: \"#f6b93b\" },\r\n        { name: \"MandarinRed\", color: \"#e55039\" },\r\n        { name: \"AzraqBlue\", color: \"#4a69bd\" },\r\n        { name: \"Dupain\", color: \"#60a3bc\" },\r\n        { name: \"AuroraGreen\", color: \"#78e08f\" },\r\n        { name: \"IcelandPoppy\", color: \"#fa983a\" },\r\n        { name: \"TomatoRed\", color: \"#eb2f06\" },\r\n        { name: \"YueGuangBlue\", color: \"#1e3799\" },\r\n        { name: \"GoodSamaritan\", color: \"#3c6382\" },\r\n        { name: \"Waterfall\", color: \"#38ada9\" },\r\n        { name: \"CarrotOrange\", color: \"#e58e26\" },\r\n        { name: \"JalapenoRed\", color: \"#b71540\" },\r\n        { name: \"DarkSapphire\", color: \"#0c2461\" },\r\n        { name: \"ForestBlues\", color: \"#0a3d62\" },\r\n        { name: \"ReefEncounter\", color: \"#079992\" }\r\n      ]\r\n    }\r\n  ];","D:\\react_tutorial\\color_project\\src\\ColorBox.js",["117"],"import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport chroma from \"chroma-js\"\r\nimport './ColorBox.css'\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\n\r\nclass ColorBox extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={ copied: false }\r\n        this.changeCopyState=this.changeCopyState.bind(this)\r\n    }\r\n    changeCopyState(){\r\n        this.setState( {copied: true}, ()=> {\r\n            setTimeout(()=>this.setState({copied: false}), 1500)\r\n        })\r\n    }\r\n    render(){\r\n        const {name,background,paletteId,id,showLink}=this.props; \r\n        const {copied} = this.state;\r\n        const isDarkColor= chroma(background).luminance() <= 0.08;\r\n        const isLightColor= chroma(background).luminance() >= 0.5;\r\n        return(\r\n            <CopyToClipboard text={background} onCopy={this.changeCopyState} >\r\n            <div style={{background: this.props.background}} className=\"ColorBox\">\r\n                <div \r\n                    style={{background}} \r\n                    className={`copy-overlay ${copied && \"show\"}`}     \r\n                />\r\n                <div className={`copy-msg ${copied && \"show\"}`} >\r\n                    <h1>Copied !</h1>\r\n                    <p className={isLightColor && \"dark-text\"}>{this.props.background}</p>\r\n                </div>\r\n                 <div className=\"copy-container\">\r\n                     <div className='box-content'>\r\n                         <span className={isDarkColor && \"light-text\"}>{this.props.name}</span>\r\n                     </div>\r\n                     <button className={`copy-button ${isLightColor && \"dark-text\"}`} >Copy</button>\r\n                 </div>\r\n                 {showLink && (\r\n                     <Link to={`/palette/${paletteId}/${id}`} onClick={e => e.stopPropagation()}>\r\n                     <span className={`see-more ${isLightColor && \"dark-text\"}`}>MORE</span>\r\n                     </Link>\r\n                 )}\r\n                 \r\n                \r\n            </div>\r\n            </CopyToClipboard>\r\n        )\r\n    }\r\n}\r\nexport default ColorBox;","D:\\react_tutorial\\color_project\\src\\colorHelper.js",[],"D:\\react_tutorial\\color_project\\src\\Navbar.js",["118","119","120","121","122"],"import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Select from \"@material-ui/core/Select\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport Slider, { Range } from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport './Navbar.css'\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={ format: \"hex\" }\r\n        this.handleChange=this.handleChange.bind(this)\r\n    }\r\n    handleChange(e){\r\n        this.setState({ format: e.target.value })\r\n        this.props.handleChange(e.target.value)\r\n    }\r\n    render(){\r\n        const { level,changeLevel,handleChange }=this.props\r\n        const { format } = this.state\r\n        return(\r\n            <header className=\"Navbar\">\r\n\r\n                <div className=\"logo\">\r\n                    <Link to='/'>ReactColorPicker</Link>\r\n                    \r\n                </div>\r\n                \r\n                {this.props.showingAllColors && (\r\n                 <div className=\"slider-container\">\r\n                  <span>Level : {this.props.level}</span>\r\n                  <div className=\"slider\">\r\n                   <Slider \r\n                    defaultValue={this.props.level}\r\n                    min={100}\r\n                    max={900}\r\n                    step={100}\r\n                    onAfterChange={this.props.changeLevel}\r\n                  />\r\n                 </div>\r\n                </div>\r\n                ) }\r\n                <div className=\"select-container\">\r\n                    <Select value={this.state.format} onChange={this.handleChange}>\r\n                        <MenuItem value=\"hex\">HEX</MenuItem>\r\n                        <MenuItem value=\"rgb\">RGB</MenuItem>\r\n                        <MenuItem value=\"rgba\">RGBA</MenuItem>\r\n                    </Select>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\nexport default Navbar;","D:\\react_tutorial\\color_project\\src\\PaletteList.js",["123"],"import React, { Component } from 'react'\r\nimport MiniPalette from './MiniPalette'\r\nimport {Link} from 'react-router-dom'\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport { colors } from '@material-ui/core';\r\nimport bg from \"../src/styles/bg.svg\"\r\n\r\nconst styles = {\r\n    root: {\r\n        //backgroundColor: \"blue\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        alignItems: \"flex-start\",\r\n        justifyContent: \"center\",\r\n        /* background by SVGBackgrounds.com */\r\n        backgroundColor: \"#2e41aa\",\r\n        backgroundImage: `url(${bg})`,\r\n        overflow: \"scroll\"\r\n    },\r\n    container: {\r\n        \r\n        width: \"50%\",\r\n        display: \"flex\",\r\n        alignItems: \"flex-start\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n    nav: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n        color: \"white\",\r\n        alignItems: \"center\",\r\n        \"& a\": {\r\n            color: \"white\"\r\n        }\r\n    },\r\n    palettes: {\r\n        boxSizing: \"border-box\",\r\n        width: \"100%\",\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"repeat(3, 30%)\"\r\n    }\r\n};\r\n\r\nclass PaletteList extends Component {\r\n    goToPalette(id){\r\n        this.props.history.push(`palette/${id}`)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={this.props.classes.root}>\r\n                <div className={this.props.classes.container}>\r\n                    <nav className={this.props.classes.nav}>\r\n                        <h1>React Colors</h1>\r\n                        <Link to=\"/palette/new\">Create Palette</Link>\r\n                    </nav>\r\n                    <div className={this.props.classes.palettes}>\r\n                    {this.props.palette.map(palette =>(\r\n                        //one way but not good way\r\n                        // <Link to={`/palette/${palette.id}`}>\r\n                        //     <MiniPalette {...palette} />\r\n                        // </Link>      \r\n                        \r\n                        <MiniPalette {...palette} \r\n                           handleClick={() => this.goToPalette(palette.id)}\r\n                           handleDelete={this.props.deletePalette}\r\n                           key={palette.id}\r\n                           id={palette.id}\r\n                        />\r\n                           \r\n                        )\r\n                      )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withStyles(styles)(PaletteList);","D:\\react_tutorial\\color_project\\src\\MiniPalette.js",["124"],"import React, { Component } from 'react'\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport { colors } from '@material-ui/core';\r\nconst styles = {\r\n    root: {\r\n        backgroundColor: \"white\",\r\n        border: \"1px solid black\",\r\n        borderRadius: \"5px\",\r\n        position: \"relative\",\r\n        padding: \"0.5rem\",\r\n        Overflow: \"hidden\",\r\n        cursor: \"pointer\",\r\n        \"&:hover svg\": {\r\n            opacity: 1,\r\n        }\r\n    },\r\n    colors: {\r\n        backgroudColor: \"#dae1e4\",\r\n        height: \"150px\",\r\n        width: \"100%\",\r\n        borderRadius: \"6px\",\r\n        Overflow: \"hidden\",\r\n    },\r\n    title: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        margin: \"0\",\r\n        color: \"black\",\r\n        padding: \"0.5rem\",\r\n        fontSize: \"1rem\",\r\n        position: \"relative\"\r\n    },\r\n    emoji: {\r\n        marginLeft: \"0.5rem\",\r\n        fontSize: \"1.5rem\"\r\n    },\r\n    miniColor: {\r\n        height: \"25%\",\r\n        width: \"20%\",\r\n        display: \"inline-block\",\r\n        margin: \"0 auto\",\r\n        position: \"relative\",\r\n        marginBottom: \"-3.5px\"   \r\n    } ,\r\n    delete: {\r\n\r\n    },\r\n    DeleteIcon: {\r\n        color: \"white\",\r\n        backgroundColor: \"#eb3d30\",\r\n        width: \"20px\",\r\n        height: \"20px\",\r\n        position: \"absolute\",\r\n        right: \"0px\",\r\n        top: \"0px\",\r\n        padding: \"10px\",\r\n        zIndex: 8,\r\n        opacity: 0,\r\n        \r\n    }\r\n\r\n};\r\nclass MiniPalette extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.deletePalette=this.deletePalette.bind(this)\r\n    }\r\n    deletePalette(e){\r\n        e.stopPropagation();\r\n        //alert(\"Deleted\");\r\n        this.props.handleDelete(this.props.id)\r\n    }\r\n    render(){ \r\n        const {classes,paletteName,emoji,colors}=this.props;\r\n        const miniColorBoxes = colors.map(color => (\r\n            <div \r\n                className={classes.miniColor} \r\n                style={{backgroundColor: color.color}}\r\n                key={color.name}\r\n            />\r\n        ))\r\n        return(\r\n        <div className={classes.root} onClick={this.props.handleClick}>\r\n            <div className={classes.delete}>\r\n                <DeleteIcon \r\n                    className={classes.DeleteIcon} \r\n                    style={{transition: \"all 0.4s ease-in-out\"}}\r\n                    onClick={this.deletePalette}\r\n                   // onClick={()=>alert(\"Click !\")}\r\n                />\r\n            </div>\r\n            <div className={classes.colors}>\r\n                {/* mini color boxes */}\r\n                {miniColorBoxes}\r\n            </div>\r\n            <h5 className={classes.title}>\r\n                {paletteName}\r\n                <span className={classes.emoji}>{emoji}</span>\r\n            </h5>\r\n            \r\n        </div>\r\n    )\r\n  }\r\n}\r\nexport default withStyles(styles)(MiniPalette);","D:\\react_tutorial\\color_project\\src\\SingleColorPalette.js",[],"D:\\react_tutorial\\color_project\\src\\PaletteFooter.js",[],"D:\\react_tutorial\\color_project\\src\\styles\\PaletteFooterStyles.js",["125"],"  \r\nexport default {\r\n    PaletteFooter: {\r\n      backgroundColor: \"white\",\r\n      height: \"5vh\",\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n      alignItems: \"center\",\r\n      fontWeight: \"bold\"\r\n    },\r\n    emoji: {\r\n      fontSize: \"1.5rem\",\r\n      margin: \"0 1rem\"\r\n    }\r\n  };","D:\\react_tutorial\\color_project\\src\\styles\\NewPaletteFormStyles.js",[],["126","127"],"D:\\react_tutorial\\color_project\\src\\constants.js",[],["128","129"],"D:\\react_tutorial\\color_project\\src\\ColorPickerForm.js",[],"D:\\react_tutorial\\color_project\\src\\styles\\ColorPickerFormStyles.js",[],"D:\\react_tutorial\\color_project\\src\\DragableColorBox.js",[],"D:\\react_tutorial\\color_project\\src\\DragableColorList.js",[],["130","131"],"D:\\react_tutorial\\color_project\\src\\DraggableColorList.js",[],"D:\\react_tutorial\\color_project\\src\\styles\\sizes.js",["132"],"export default {\r\n    up() {},\r\n    down(size) {\r\n      const sizes = {\r\n        xs: \"575.98px\",\r\n        sm: \"767.98px\",\r\n        md: \"991.98px\",\r\n        lg: \"1199.98px\",\r\n        xl: \"1600px\"\r\n      };\r\n      return `@media (max-width: ${sizes[size]})`;\r\n    }\r\n  };","D:\\react_tutorial\\color_project\\src\\NewPaletteForm.js",["133","134","135","136","137","138","139"],"import React, { Component } from \"react\";\r\n// import {ColorPickerForm} from \"./ColorPickerForm\"\r\nimport {Link} from \"react-router-dom\"\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PaletteFormNav from \"./PaletteFormNav\"\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport {ChromePicker} from 'react-color'\r\nimport { Button, colors } from \"@material-ui/core\";\r\nimport DragableColorBox from './DragableColorBox'\r\nimport DraggableColorList from './DraggableColorList'\r\nimport {ValidatorForm,TextValidator} from \"react-material-ui-form-validator\"\r\nimport {arrayMove} from \"react-sortable-hoc\"\r\nconst drawerWidth = 400;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 20\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"calc(100vh - 64px)\",\r\n    padding: 0,\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    marginLeft: -drawerWidth\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    }),\r\n    marginLeft: 0\r\n  },\r\n  container: {\r\n    width: \"90%\",\r\n    height: \"100%\",\r\n\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    \r\n  },\r\n  buttons: {\r\n    width: \"100%\",\r\n\r\n  },\r\n  button: {\r\n    width: \"50%\",\r\n\r\n  },\r\n  picker: {\r\n    width: \"100% !important\",\r\n    marginTop: \"2rem\"\r\n  },\r\n  addColor: {\r\n    width: \"100%\",\r\n    padding: \"1rem\",\r\n    marginTop: \"1rem\",\r\n    fontSize: \"2rem\",\r\n\r\n  },\r\n  colorNameInput: {\r\n    width: \"100%\",\r\n    height: \"60px\",\r\n  },\r\n});\r\n\r\nclass NewPaletteForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      open: true,\r\n      currentColor: \"teal\",\r\n      newColorName: \"\",\r\n      colors: this.props.palette[0].colors,\r\n      newPaletteName: \"\",\r\n\r\n    }\r\n    this.updateCurrentColor=this.updateCurrentColor.bind(this);\r\n    this.addNewColor=this.addNewColor.bind(this);\r\n    this.handleChange=this.handleChange.bind(this);\r\n    this.handleSubmit=this.handleSubmit.bind(this);\r\n    this.removeColor=this.removeColor.bind(this);\r\n    this.clearColors=this.clearColors.bind(this);\r\n    this.addRandomColor=this.addRandomColor.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    ValidatorForm.addValidationRule(\"isColorNameUnique\", value =>\r\n      this.state.colors.every(\r\n        ({ name }) => name.toLowerCase() !== value.toLowerCase()\r\n      )\r\n    );\r\n    ValidatorForm.addValidationRule(\"isColorUnique\", value =>\r\n      this.state.colors.every(({ color }) => color !== this.state.currentColor)\r\n    );\r\n    ValidatorForm.addValidationRule(\"isPaletteUnique\", value =>\r\n      this.props.palette.every(({ paletteName }) =>paletteName.toLowerCase() \r\n      !== value.toLowerCase())\r\n    );\r\n    \r\n  }\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  updateCurrentColor(newColor){\r\n    this.setState({currentColor: newColor.hex})\r\n  }\r\n  addNewColor() {\r\n    const newColor={\r\n      color: this.state.currentColor,\r\n      name: this.state.newColorName\r\n    }\r\n    this.setState({colors: [...this.state.colors,newColor]})\r\n  }\r\n  handleChange(evt){\r\n    this.setState({\r\n    [evt.target.name]: evt.target.value\r\n    })\r\n  }\r\n  onSortEnd = ({oldIndex, newIndex}) => {\r\n    this.setState(({colors}) => ({\r\n      colors: arrayMove(colors, oldIndex, newIndex),\r\n    }));\r\n  };\r\n  handleSubmit(newPalette){ \r\n    newPalette.id=newPalette.paletteName.toLowerCase().replace(/ /g,\"_\");\r\n    newPalette.colors=this.state.colors;\r\n    this.props.savePalette(newPalette)\r\n    this.props.history.push(\"/\")\r\n  }\r\n  removeColor(colorName) {\r\n    this.setState({\r\n      colors: this.state.colors.filter(color => color.name !== colorName)\r\n    })\r\n  }\r\n  clearColors(){\r\n    this.setState({colors: []})\r\n  }\r\n  addRandomColor(){\r\n    //pic random color from existing palettes\r\n    const allColors=this.props.palette.map(p=>p.colors).flat();\r\n    var ran=Math.floor(Math.random()*allColors.length);\r\n    const randomColor=allColors[ran];\r\n    this.setState(\r\n      {colors:[...this.state.colors,randomColor ]}\r\n    )\r\n\r\n  }\r\n  render() {\r\n    const { classes,palette } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>New Palette Form!</h1>\r\n      <div className={classes.root}>\r\n        <PaletteFormNav \r\n          open={open}\r\n          //classes={classes}\r\n          palette={palette}\r\n          handleSubmit={this.handleSubmit}\r\n          handleDrawerOpen={this.handleDrawerOpen}\r\n        />\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant='persistent'\r\n          anchor='left'\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <div className={classes.container}>\r\n          <Typography variant='h4' gutterBottom>\r\n            Design Your Palette\r\n          </Typography>\r\n          <div className={classes.buttons}>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={this.clearColors } className={classes.button}>\r\n              Clear Palette\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.addRandomColor } className={classes.button}>\r\n              Random Color\r\n            </Button>\r\n          </div>\r\n          <div>\r\n          <ChromePicker \r\n            color={this.state.currentColor}\r\n            onChangeComplete={this.updateCurrentColor}\r\n            className={classes.picker}\r\n          />\r\n          <ValidatorForm onSubmit={this.addNewColor} ref=\"form\">\r\n            <TextValidator \r\n              className={classes.colorNameInput}\r\n              value={this.state.newColorName} \r\n              placeholder=\"Color Name\"\r\n              name='newColorName'\r\n              variant=\"filled\"\r\n              margin=\"normal\"\r\n              onChange={this.handleChange} \r\n              validators={[\"required\", \"isColorNameUnique\", \"isColorUnique\"]}\r\n              errorMessages={[\r\n                \"Enter a color name\",\r\n                \"Color name must be unique\", \r\n                \"Color already used!\"\r\n              ]}\r\n            />\r\n            <Button className={classes.addColor} variant='contained' color='primary'\r\n            type=\"submit\"\r\n            style={{backgroundColor: this.state.currentColor}}\r\n            //onClick={this.addNewColor}  \r\n            >\r\n              Add Color\r\n            </Button>\r\n          </ValidatorForm>\r\n          </div>\r\n          </div>\r\n        </Drawer>\r\n        <main\r\n          className={classNames(classes.content, {\r\n            [classes.contentShift]: open\r\n          })}\r\n        >\r\n          <div className={classes.drawerHeader} />\r\n          <DraggableColorList \r\n            colors={this.state.colors} \r\n            axis=\"xy\"\r\n            onSortEnd={this.onSortEnd}\r\n            removeColor={this.removeColor}\r\n          />\r\n          {/* {this.state.colors.map(color => (\r\n            <DragableColorBox color={color.color} name={color.name}/>\r\n          ))} */}\r\n          \r\n        </main>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//export default NewPaletteForm;\r\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);","D:\\react_tutorial\\color_project\\src\\PaletteFormNav.js",["140","141"],"import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport PaletteMetaForm from './PaletteMetaForm'\r\n\r\nconst drawerWidth=400;\r\nconst styles=theme=> ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    height: \"64px\"\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 20\r\n  },\r\n  navBtns: {\r\n    marginRight: \"1rem\",\r\n    \"& a\": {\r\n      textDecoration: \"none\"\r\n    }\r\n  },\r\n  button: {\r\n    margin: \"0 0.5rem\",\r\n  },\r\n  link: {\r\n     textDecoration: \"none\",\r\n  }\r\n});\r\n\r\nclass PaletteFormNav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { newPaletteName: \"\",formShowing: false};\r\n    //this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange=this.handleChange.bind(this);\r\n    this.showForm=this.showForm.bind(this);\r\n    this.hideForm=this.hideForm.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value =>\r\n      this.props.palette.every(\r\n        ({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\r\n      )\r\n    );\r\n  }\r\n  handleChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value\r\n    });\r\n  }\r\n  showForm() {\r\n    this.setState({formShowing: true})\r\n  }\r\n  hideForm(){\r\n    this.setState({formShowing: false})\r\n  }\r\n  render() {\r\n    const { classes, open } = this.props;\r\n    const { newPaletteName } = this.state;\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position='fixed'\r\n          color='default'\r\n          className={classNames(classes.appBar, {\r\n            [classes.appBarShift]: open\r\n          })}\r\n        >\r\n          <Toolbar disableGutters={!open}>\r\n            <IconButton\r\n              color='inherit'\r\n              aria-label='Open drawer'\r\n              onClick={this.props.handleDrawerOpen}\r\n              className={classNames(classes.menuButton, open && classes.hide)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant='h6' color='inherit' noWrap>\r\n              Create A Palette\r\n            </Typography>\r\n            \r\n           \r\n          </Toolbar>\r\n          {/* <Link to='/'>\r\n                <Button variant='contained' color='secondary'>\r\n                   Go Back\r\n                </Button>\r\n            </Link> */}\r\n            <div className={classes.navBtns}>\r\n            <Link to='/'>\r\n                <Button variant='contained' color='secondary' className={classes.button}>\r\n                   Go Back\r\n                </Button>\r\n            </Link>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.showForm}\r\n              className={classes.button}\r\n            >\r\n              Save\r\n            </Button>\r\n            \r\n            </div>\r\n        </AppBar>\r\n        {this.state.formShowing && (\r\n            <PaletteMetaForm \r\n              palette={this.props.palette}\r\n              handleSubmit={this.props.handleSubmit}\r\n              hideForm={this.hideForm}\r\n            /> )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles,{withTheme: true})(PaletteFormNav);","D:\\react_tutorial\\color_project\\src\\PaletteMetaForm.js",["142"],"import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport {Picker} from \"emoji-mart\"\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nclass PaletteMetaForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //open: true, \r\n      stage:\"form\",\r\n      newPaletteName: \"\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.showEmojiPicker = this.showEmojiPicker.bind(this);\r\n    this.savePalette = this.savePalette.bind(this);\r\n  }\r\n  handleChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value\r\n    });\r\n  }\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n  showEmojiPicker(){\r\n    this.setState({stage: \"emoji\"})\r\n  }\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  savePalette(emoji) {\r\n    const newPalette = {\r\n      paletteName: this.state.newPaletteName,\r\n      emoji: emoji.native\r\n    };\r\n    this.props.handleSubmit(newPalette);\r\n  }\r\n  render() {\r\n    const { newPaletteName } = this.state;\r\n\r\n    return (\r\n        <div>\r\n        <Dialog open={this.state.stage==='emoji'}>\r\n          <DialogTitle>\r\n            Choose A Palette Emoji\r\n          </DialogTitle>\r\n          <Picker title=\"Pick a Color Emoji\" onSelect={this.savePalette} />\r\n        </Dialog>\r\n        <Dialog\r\n          open={this.state.stage==='form'}\r\n          onClose={this.props.hideForm}\r\n          aria-labelledby='form-dialog-title'\r\n        >\r\n          <DialogTitle id='form-dialog-title'>Choose A Palette Name</DialogTitle>\r\n          <ValidatorForm\r\n              onSubmit={this.showEmojiPicker}\r\n            >\r\n          <DialogContent>\r\n              <DialogContentText>\r\n                Please Enter A Name For Your Palette, Make Sure It is Unique\r\n              </DialogContentText>\r\n               \r\n              <TextValidator\r\n                label='Palette Name'\r\n                value={newPaletteName}\r\n                name='newPaletteName'\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                validators={[\"required\", \"isPaletteNameUnique\"]}\r\n                errorMessages={[\"Enter Palette Name\", \"Name already used\"]}\r\n              />             \r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.props.hideForm} color='primary'>\r\n              Cancel\r\n            </Button>\r\n            <Button variant='contained' color='primary' type='submit'>\r\n                Save Palette\r\n              </Button>\r\n          </DialogActions>\r\n          </ValidatorForm>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PaletteMetaForm;",{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":20,"column":16,"nodeType":"149","messageId":"150","endLine":20,"endColumn":22},{"ruleId":"151","severity":1,"message":"152","line":1,"column":1,"nodeType":"153","endLine":244,"endColumn":5},{"ruleId":"147","severity":1,"message":"154","line":20,"column":16,"nodeType":"149","messageId":"150","endLine":20,"endColumn":20},{"ruleId":"147","severity":1,"message":"155","line":5,"column":18,"nodeType":"149","messageId":"150","endLine":5,"endColumn":23},{"ruleId":"147","severity":1,"message":"156","line":19,"column":17,"nodeType":"149","messageId":"150","endLine":19,"endColumn":22},{"ruleId":"147","severity":1,"message":"157","line":19,"column":23,"nodeType":"149","messageId":"150","endLine":19,"endColumn":34},{"ruleId":"147","severity":1,"message":"158","line":19,"column":35,"nodeType":"149","messageId":"150","endLine":19,"endColumn":47},{"ruleId":"147","severity":1,"message":"159","line":20,"column":17,"nodeType":"149","messageId":"150","endLine":20,"endColumn":23},{"ruleId":"147","severity":1,"message":"160","line":5,"column":10,"nodeType":"149","messageId":"150","endLine":5,"endColumn":16},{"ruleId":"147","severity":1,"message":"160","line":4,"column":10,"nodeType":"149","messageId":"150","endLine":4,"endColumn":16},{"ruleId":"151","severity":1,"message":"161","line":2,"column":1,"nodeType":"153","endLine":15,"endColumn":5},{"ruleId":"143","replacedBy":"162"},{"ruleId":"145","replacedBy":"163"},{"ruleId":"143","replacedBy":"164"},{"ruleId":"145","replacedBy":"165"},{"ruleId":"143","replacedBy":"166"},{"ruleId":"145","replacedBy":"167"},{"ruleId":"151","severity":1,"message":"161","line":1,"column":1,"nodeType":"153","endLine":13,"endColumn":5},{"ruleId":"147","severity":1,"message":"168","line":3,"column":9,"nodeType":"149","messageId":"150","endLine":3,"endColumn":13},{"ruleId":"147","severity":1,"message":"169","line":8,"column":8,"nodeType":"149","messageId":"150","endLine":8,"endColumn":19},{"ruleId":"147","severity":1,"message":"170","line":9,"column":8,"nodeType":"149","messageId":"150","endLine":9,"endColumn":14},{"ruleId":"147","severity":1,"message":"171","line":10,"column":8,"nodeType":"149","messageId":"150","endLine":10,"endColumn":15},{"ruleId":"147","severity":1,"message":"172","line":14,"column":8,"nodeType":"149","messageId":"150","endLine":14,"endColumn":16},{"ruleId":"147","severity":1,"message":"160","line":17,"column":18,"nodeType":"149","messageId":"150","endLine":17,"endColumn":24},{"ruleId":"147","severity":1,"message":"173","line":18,"column":8,"nodeType":"149","messageId":"150","endLine":18,"endColumn":24},{"ruleId":"147","severity":1,"message":"174","line":12,"column":25,"nodeType":"149","messageId":"150","endLine":12,"endColumn":38},{"ruleId":"147","severity":1,"message":"175","line":88,"column":13,"nodeType":"149","messageId":"150","endLine":88,"endColumn":27},{"ruleId":"147","severity":1,"message":"176","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":17},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'colors' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'name' is assigned a value but never used.","'Range' is defined but never used.","'level' is assigned a value but never used.","'changeLevel' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'format' is assigned a value but never used.","'colors' is defined but never used.","Assign object to a variable before exporting as module default",["177"],["178"],["177"],["178"],["177"],["178"],"'Link' is defined but never used.","'CssBaseline' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'MenuIcon' is defined but never used.","'DragableColorBox' is defined but never used.","'TextValidator' is defined but never used.","'newPaletteName' is assigned a value but never used.","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation"]